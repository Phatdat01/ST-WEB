@model IEnumerable<Book.Models.trongthang_Result>
@{
    ViewBag.Title = "Chart4";
    Layout = "~/Views/Shared/ViewAdmin.cshtml";
}


<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <title>Thống kê</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
            padding: 0;
            margin: 0;
            background-color: #fff;
        }

        #chartdiv {
            padding: 20px;
            width: 90%;
            height: 75vh;
        }

        .form-change__nam {
            border: 2px solid #999;
            display: block;
            width: 80%;
            padding: 20px;
            margin: 10px auto;
            border-radius: 10px;
        }

        .form-div {
            width: 50%;
            display: inline-flex;
            justify-content: space-between;
            margin: 10px 10px;
        }

        .current-year {
            width: 200px;
            height: 40px;
            margin-left: 50px;
            padding: 5px 10px;
            outline: none;
            border-radius: 5px;
        }

        .current-year__label {
            text-align: center;
            font-size: 20px;
            color: #000;
            margin-left: 50px;
        }

        .btn.btn-theme {
            float: right;
        }
    </style>
</head>

<body>
    @{
        string mm = "1";
    }
    @foreach (var item in Model)
    {
        <div style="display:none" class="chart-money">
            <input class="total-money" type="text" value=" @Html.DisplayFor(modelItem => item.tong)" />
            <input class="date-money" type="text" value=" @Html.DisplayFor(modelItem => item.NgayDat)" />

        </div>
        mm = @Html.DisplayFor(modelItem => item.NgayDat).ToString();


    }
    @{
        string aa = "";
        string bbY = "";
        int flag = 0;
        foreach (char c in mm)
        {
            if (c == '/')
            {
               
                break;
            }
            aa = aa + c;
        }
        foreach (char c in mm)
        {
            if (flag == 2 && c != ' ')
            {
                bbY = bbY + c;
            }

            if (c == '/')
            {
                flag++;
            }
            if(c == ' ')
            {
                break;
            }
        }
    }
    <h2 style="margin-left:30px; text-align: center">Thống kê theo tháng @aa năm @bbY</h2>
    <form action="/DonHangs/ThongKeTheoThang" class="form-change__nam" method="post">
        @Html.AntiForgeryToken()
        <div class="form-div">
            <label class="current-year__label">Chọn tháng: </label>
            <select class="current-year btn-danger" name="month">
                <option value="@aa"> @aa</option>
                @{
                    int[] arrMonths = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
                    foreach (var item in arrMonths)
                    {
                        if (item.ToString() != aa)
                        {

                            <option value="@item"> @item</option>
                        }
                    }

                }

            </select>
        </div>
        <div class="form-div">
            <label class="current-year__label">Chọn năm: </label>
            <select class="current-year btn-danger" name="year">
                <option value="@bbY"> @bbY</option>
                @{
                    foreach (var item in ViewBag.time)
                    {
                        if (item.ToString() != bbY)
                        {
                            <option value="@item"> @item</option>

                        }
                    }

                }

            </select>
        </div>
        <select class="current-year btn-warning" name="type">
            <option value="doanhthu"> Thông kê theo doanh thu</option>
            <option value="soluong"> Thông kê theo số lượng</option>

        </select>
        <input type="submit" class="btn btn-success" value="Thống kê" />
    </form>

    <div id="chartdiv"></div>
    <script src="~/Content/js/indexchart.js"></script>
    <script src="~/Content/js/xy.js"></script>
    <script src="~/Content/js/animate.js"></script>
    <script>

        var root = am5.Root.new("chartdiv");


        // Set themes
        // https://www.amcharts.com/docs/v5/concepts/themes/
        root.setThemes([
            am5themes_Animated.new(root)
        ]);



        var chart = root.container.children.push(am5xy.XYChart.new(root, {
            panX: false,
            panY: false,
            wheelX: "panX",
            wheelY: "zoomX"
        }));

        var cursor = chart.set("cursor", am5xy.XYCursor.new(root, {
            behavior: "zoomX"
        }));
        cursor.lineY.set("visible", false);


        var charMoneyArr = document.querySelectorAll('.chart-money');
        var kq = Array.from(charMoneyArr).reduce(function (callback, input) {

            var obj = {};
            var inputMoney = input.querySelector('.total-money').value.trim();
            var inputDate = input.querySelector('.date-money').value.trim();
            var date = new Date(inputDate);


            obj.date = date.getTime();
            obj.value = parseInt(inputMoney) / 1000;

            callback.push(obj)

            return callback;

        }, [])


        function generateDatas(count) {

            data = kq;
            return data;
        }

        var xAxis = chart.xAxes.push(am5xy.DateAxis.new(root, {
            maxDeviation: 0,
            baseInterval: {
                timeUnit: "day",
                count: 1
            },
            renderer: am5xy.AxisRendererX.new(root, {}),
            tooltip: am5.Tooltip.new(root, {})
        }));

        var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
            renderer: am5xy.AxisRendererY.new(root, {})
        }));

        var series = chart.series.push(am5xy.SmoothedXLineSeries.new(root, {
            name: "Series",
            xAxis: xAxis,
            yAxis: yAxis,
            valueYField: "value",
            valueXField: "date",
            tooltip: am5.Tooltip.new(root, {
                labelText: "Tổng tiền(Triệu đồng): {valueY}"
            })
        }));

        series.fills.template.setAll({
            visible: true,
            fillOpacity: 0.4
        });

        series.bullets.push(function () {
            return am5.Bullet.new(root, {
                locationY: 0,
                sprite: am5.Circle.new(root, {
                    radius: 4,
                    stroke: root.interfaceColors.get("background"),
                    strokeWidth: 2,
                    fill: am5.color(0xFF0000)
                })
            });
        });


        chart.set("scrollbarX", am5.Scrollbar.new(root, {
            orientation: "horizontal"
        }));


        var data = generateDatas(50);
        series.data.setAll(data);

        series.appear(1000);
        chart.appear(1000, 100);
    </script>
</body>

</html>